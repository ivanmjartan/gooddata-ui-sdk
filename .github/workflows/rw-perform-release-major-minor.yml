name: rw ~ Release ~ Perform release major or minor
on:
    workflow_call:
        inputs:
            bump:
                required: true
                description: "The type of version bump (major, minor)"
                type: string

jobs:
    publish-release:
        uses: ./.github/workflows/rw-publish-release.yml
        permissions:
            contents: write
            id-token: write
        secrets: inherit
        with:
            bump: ${{ inputs.bump }}

    prepare-variables:
        runs-on: [ubuntu-latest]
        needs: [publish-release]
        outputs:
            version: ${{ steps.set_variables.outputs.version }}
            rel-branch: ${{ steps.set_variables.outputs.target-branch }}
            short-version: ${{ steps.set_variables.outputs.short-version }}        
        permissions:
            contents: read
        steps:            
            - name: Set variables names for release aka rel branch name and short version
              id: set_variables
              run: |
                  echo "version $VERSION"
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

                  string=$VERSION
                  base="rel/${string%.*}"
                  echo "version $string converted to $base"
                  echo "target-branch=$base" >> $GITHUB_OUTPUT

                  short=${string%.*}
                  echo "version $string converted to $short"
                  echo "short-version=$short" >> $GITHUB_OUTPUT
              env:
                  VERSION: ${{ needs.publish-release.outputs.version }}              
    
    update-hugo-version:
        needs: [prepare-variables]
        uses: ./.github/workflows/rw-doc-update-hugo-version.yml
        permissions:
          contents: write
        secrets: inherit
        with:
          source-branch: "release"
          version: ${{ needs.prepare-variables.outputs.short-version }}
    
    add-release-tag:
        needs: [prepare-variables,update-hugo-version]
        uses: ./.github/workflows/rw-git-create-tag.yml
        permissions:
          contents: write
        with:
          source-branch: "release"
          version: ${{ needs.prepare-variables.outputs.version }}

    create-rel-branch:
        runs-on: [ubuntu-latest]
        needs: [add-release-tag, prepare-variables]
        permissions:
            contents: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4            
            - name: Run copy branch action
              uses: ./.github/actions/branch-cutoff-action
              with:
                  source-branch: "release"
                  target-branch: ${{ needs.prepare-variables.outputs.rel-branch }}
    
    back-merge-release-to-master:
      needs: [create-rel-branch]
      uses: ./.github/workflows/rw-git-backmerge.yml
      permissions:
        contents: write
        pull-requests: write
      secrets: inherit
      with:
        source-branch: "release"
        target-branch: "master"
    
    slack-notification:
      runs-on: [ubuntu-latest]
      needs: [back-merge-release-to-master]
      steps:
        - name: print back-merge-release-to-master outputs
          run: echo "The back-merge-release-to-master outputs are ${{ needs.back-merge-release-to-master.outputs.has-conflicts }} and ${{ needs.back-merge-release-to-master.outputs.pull-request-url }}"
        - name: Notify to slack no conflicts
          if: ${{ needs.back-merge-release-to-master.outputs.has-conflicts == 'false' }}
          uses: slackapi/slack-github-action@v1.25.0
          with:
            channel-id: "#sdk-wf-test"
            slack-message: "The backmerge from the release is ready and can be easily merged to the master branch. It won't cause any problems because there are *no conflicts*. ${{env.PULL_REQUEST }}"
          env:            
            PULL_REQUEST: ${{ needs.back-merge-release-to-master.outputs.pull-request-url }}
            SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        - name: Notify to slack has conflicts
          if: ${{ needs.back-merge-release-to-master.outputs.has-conflicts == 'true' }}
          uses: slackapi/slack-github-action@v1.25.0
          with:
            channel-id: "#sdk-wf-test"
            slack-message: "The backmerge from the release is ready and can not be easily merged into the master branch. However, *there are conflicts* in the PR that needs to be resolved. ${{env.PULL_REQUEST }}"
          env:            
            PULL_REQUEST: ${{ needs.back-merge-release-to-master.outputs.pull-request-url }}
            SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

